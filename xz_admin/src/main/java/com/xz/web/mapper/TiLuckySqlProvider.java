package com.xz.web.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.xz.web.entity.TiLucky;
import com.xz.web.entity.TiLuckyExample.Criteria;
import com.xz.web.entity.TiLuckyExample.Criterion;
import com.xz.web.entity.TiLuckyExample;
import java.util.List;
import java.util.Map;

public class TiLuckySqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String countByExample(TiLuckyExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("ti_lucky");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String deleteByExample(TiLuckyExample example) {
        BEGIN();
        DELETE_FROM("ti_lucky");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String insertSelective(TiLucky record) {
        BEGIN();
        INSERT_INTO("ti_lucky");
        
        if (record.getConstellationId() != null) {
            VALUES("constellation_id", "#{constellationId,jdbcType=BIGINT}");
        }
        
        if (record.getLuckyType1() != null) {
            VALUES("lucky_type1", "#{luckyType1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType2() != null) {
            VALUES("lucky_type2", "#{luckyType2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType3() != null) {
            VALUES("lucky_type3", "#{luckyType3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType4() != null) {
            VALUES("lucky_type4", "#{luckyType4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScore1() != null) {
            VALUES("lucky_score1", "#{luckyScore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore2() != null) {
            VALUES("lucky_score2", "#{luckyScore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore3() != null) {
            VALUES("lucky_score3", "#{luckyScore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore4() != null) {
            VALUES("lucky_score4", "#{luckyScore4,jdbcType=INTEGER}");
        }
        
        if (record.getRemindToday() != null) {
            VALUES("remind_today", "#{remindToday,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore1() != null) {
            VALUES("lucky_type_more1", "#{luckyTypeMore1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore2() != null) {
            VALUES("lucky_type_more2", "#{luckyTypeMore2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore3() != null) {
            VALUES("lucky_type_more3", "#{luckyTypeMore3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore4() != null) {
            VALUES("lucky_type_more4", "#{luckyTypeMore4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScoreMore1() != null) {
            VALUES("lucky_score_more1", "#{luckyScoreMore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore2() != null) {
            VALUES("lucky_score_more2", "#{luckyScoreMore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore3() != null) {
            VALUES("lucky_score_more3", "#{luckyScoreMore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore4() != null) {
            VALUES("lucky_score_more4", "#{luckyScoreMore4,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyWords1() != null) {
            VALUES("lucky_words1", "#{luckyWords1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords2() != null) {
            VALUES("lucky_words2", "#{luckyWords2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords3() != null) {
            VALUES("lucky_words3", "#{luckyWords3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords4() != null) {
            VALUES("lucky_words4", "#{luckyWords4,jdbcType=VARCHAR}");
        }
        
        if (record.getToDo() != null) {
            VALUES("to_do", "#{toDo,jdbcType=VARCHAR}");
        }
        
        if (record.getNotDo() != null) {
            VALUES("not_do", "#{notDo,jdbcType=VARCHAR}");
        }
        
        if (record.getPublishTime() != null) {
            VALUES("publish_time", "#{publishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyDate() != null) {
            VALUES("lucky_date", "#{luckyDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTimestamp() != null) {
            VALUES("create_timestamp", "#{createTimestamp,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            VALUES("update_timestamp", "#{updateTimestamp,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String selectByExample(TiLuckyExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("constellation_id");
        SELECT("lucky_type1");
        SELECT("lucky_type2");
        SELECT("lucky_type3");
        SELECT("lucky_type4");
        SELECT("lucky_score1");
        SELECT("lucky_score2");
        SELECT("lucky_score3");
        SELECT("lucky_score4");
        SELECT("remind_today");
        SELECT("lucky_type_more1");
        SELECT("lucky_type_more2");
        SELECT("lucky_type_more3");
        SELECT("lucky_type_more4");
        SELECT("lucky_score_more1");
        SELECT("lucky_score_more2");
        SELECT("lucky_score_more3");
        SELECT("lucky_score_more4");
        SELECT("lucky_words1");
        SELECT("lucky_words2");
        SELECT("lucky_words3");
        SELECT("lucky_words4");
        SELECT("to_do");
        SELECT("not_do");
        SELECT("publish_time");
        SELECT("lucky_date");
        SELECT("create_timestamp");
        SELECT("update_timestamp");
        FROM("ti_lucky");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TiLucky record = (TiLucky) parameter.get("record");
        TiLuckyExample example = (TiLuckyExample) parameter.get("example");
        
        BEGIN();
        UPDATE("ti_lucky");
        
        if (record.getId() != null) {
            SET("id = #{record.id,jdbcType=BIGINT}");
        }
        
        if (record.getConstellationId() != null) {
            SET("constellation_id = #{record.constellationId,jdbcType=BIGINT}");
        }
        
        if (record.getLuckyType1() != null) {
            SET("lucky_type1 = #{record.luckyType1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType2() != null) {
            SET("lucky_type2 = #{record.luckyType2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType3() != null) {
            SET("lucky_type3 = #{record.luckyType3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType4() != null) {
            SET("lucky_type4 = #{record.luckyType4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScore1() != null) {
            SET("lucky_score1 = #{record.luckyScore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore2() != null) {
            SET("lucky_score2 = #{record.luckyScore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore3() != null) {
            SET("lucky_score3 = #{record.luckyScore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore4() != null) {
            SET("lucky_score4 = #{record.luckyScore4,jdbcType=INTEGER}");
        }
        
        if (record.getRemindToday() != null) {
            SET("remind_today = #{record.remindToday,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore1() != null) {
            SET("lucky_type_more1 = #{record.luckyTypeMore1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore2() != null) {
            SET("lucky_type_more2 = #{record.luckyTypeMore2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore3() != null) {
            SET("lucky_type_more3 = #{record.luckyTypeMore3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore4() != null) {
            SET("lucky_type_more4 = #{record.luckyTypeMore4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScoreMore1() != null) {
            SET("lucky_score_more1 = #{record.luckyScoreMore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore2() != null) {
            SET("lucky_score_more2 = #{record.luckyScoreMore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore3() != null) {
            SET("lucky_score_more3 = #{record.luckyScoreMore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore4() != null) {
            SET("lucky_score_more4 = #{record.luckyScoreMore4,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyWords1() != null) {
            SET("lucky_words1 = #{record.luckyWords1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords2() != null) {
            SET("lucky_words2 = #{record.luckyWords2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords3() != null) {
            SET("lucky_words3 = #{record.luckyWords3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords4() != null) {
            SET("lucky_words4 = #{record.luckyWords4,jdbcType=VARCHAR}");
        }
        
        if (record.getToDo() != null) {
            SET("to_do = #{record.toDo,jdbcType=VARCHAR}");
        }
        
        if (record.getNotDo() != null) {
            SET("not_do = #{record.notDo,jdbcType=VARCHAR}");
        }
        
        if (record.getPublishTime() != null) {
            SET("publish_time = #{record.publishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyDate() != null) {
            SET("lucky_date = #{record.luckyDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTimestamp() != null) {
            SET("create_timestamp = #{record.createTimestamp,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            SET("update_timestamp = #{record.updateTimestamp,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("ti_lucky");
        
        SET("id = #{record.id,jdbcType=BIGINT}");
        SET("constellation_id = #{record.constellationId,jdbcType=BIGINT}");
        SET("lucky_type1 = #{record.luckyType1,jdbcType=VARCHAR}");
        SET("lucky_type2 = #{record.luckyType2,jdbcType=VARCHAR}");
        SET("lucky_type3 = #{record.luckyType3,jdbcType=VARCHAR}");
        SET("lucky_type4 = #{record.luckyType4,jdbcType=VARCHAR}");
        SET("lucky_score1 = #{record.luckyScore1,jdbcType=INTEGER}");
        SET("lucky_score2 = #{record.luckyScore2,jdbcType=INTEGER}");
        SET("lucky_score3 = #{record.luckyScore3,jdbcType=INTEGER}");
        SET("lucky_score4 = #{record.luckyScore4,jdbcType=INTEGER}");
        SET("remind_today = #{record.remindToday,jdbcType=VARCHAR}");
        SET("lucky_type_more1 = #{record.luckyTypeMore1,jdbcType=VARCHAR}");
        SET("lucky_type_more2 = #{record.luckyTypeMore2,jdbcType=VARCHAR}");
        SET("lucky_type_more3 = #{record.luckyTypeMore3,jdbcType=VARCHAR}");
        SET("lucky_type_more4 = #{record.luckyTypeMore4,jdbcType=VARCHAR}");
        SET("lucky_score_more1 = #{record.luckyScoreMore1,jdbcType=INTEGER}");
        SET("lucky_score_more2 = #{record.luckyScoreMore2,jdbcType=INTEGER}");
        SET("lucky_score_more3 = #{record.luckyScoreMore3,jdbcType=INTEGER}");
        SET("lucky_score_more4 = #{record.luckyScoreMore4,jdbcType=INTEGER}");
        SET("lucky_words1 = #{record.luckyWords1,jdbcType=VARCHAR}");
        SET("lucky_words2 = #{record.luckyWords2,jdbcType=VARCHAR}");
        SET("lucky_words3 = #{record.luckyWords3,jdbcType=VARCHAR}");
        SET("lucky_words4 = #{record.luckyWords4,jdbcType=VARCHAR}");
        SET("to_do = #{record.toDo,jdbcType=VARCHAR}");
        SET("not_do = #{record.notDo,jdbcType=VARCHAR}");
        SET("publish_time = #{record.publishTime,jdbcType=VARCHAR}");
        SET("lucky_date = #{record.luckyDate,jdbcType=VARCHAR}");
        SET("create_timestamp = #{record.createTimestamp,jdbcType=VARCHAR}");
        SET("update_timestamp = #{record.updateTimestamp,jdbcType=VARCHAR}");
        
        TiLuckyExample example = (TiLuckyExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    public String updateByPrimaryKeySelective(TiLucky record) {
        BEGIN();
        UPDATE("ti_lucky");
        
        if (record.getConstellationId() != null) {
            SET("constellation_id = #{constellationId,jdbcType=BIGINT}");
        }
        
        if (record.getLuckyType1() != null) {
            SET("lucky_type1 = #{luckyType1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType2() != null) {
            SET("lucky_type2 = #{luckyType2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType3() != null) {
            SET("lucky_type3 = #{luckyType3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyType4() != null) {
            SET("lucky_type4 = #{luckyType4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScore1() != null) {
            SET("lucky_score1 = #{luckyScore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore2() != null) {
            SET("lucky_score2 = #{luckyScore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore3() != null) {
            SET("lucky_score3 = #{luckyScore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScore4() != null) {
            SET("lucky_score4 = #{luckyScore4,jdbcType=INTEGER}");
        }
        
        if (record.getRemindToday() != null) {
            SET("remind_today = #{remindToday,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore1() != null) {
            SET("lucky_type_more1 = #{luckyTypeMore1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore2() != null) {
            SET("lucky_type_more2 = #{luckyTypeMore2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore3() != null) {
            SET("lucky_type_more3 = #{luckyTypeMore3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyTypeMore4() != null) {
            SET("lucky_type_more4 = #{luckyTypeMore4,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyScoreMore1() != null) {
            SET("lucky_score_more1 = #{luckyScoreMore1,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore2() != null) {
            SET("lucky_score_more2 = #{luckyScoreMore2,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore3() != null) {
            SET("lucky_score_more3 = #{luckyScoreMore3,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyScoreMore4() != null) {
            SET("lucky_score_more4 = #{luckyScoreMore4,jdbcType=INTEGER}");
        }
        
        if (record.getLuckyWords1() != null) {
            SET("lucky_words1 = #{luckyWords1,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords2() != null) {
            SET("lucky_words2 = #{luckyWords2,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords3() != null) {
            SET("lucky_words3 = #{luckyWords3,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyWords4() != null) {
            SET("lucky_words4 = #{luckyWords4,jdbcType=VARCHAR}");
        }
        
        if (record.getToDo() != null) {
            SET("to_do = #{toDo,jdbcType=VARCHAR}");
        }
        
        if (record.getNotDo() != null) {
            SET("not_do = #{notDo,jdbcType=VARCHAR}");
        }
        
        if (record.getPublishTime() != null) {
            SET("publish_time = #{publishTime,jdbcType=VARCHAR}");
        }
        
        if (record.getLuckyDate() != null) {
            SET("lucky_date = #{luckyDate,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTimestamp() != null) {
            SET("create_timestamp = #{createTimestamp,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            SET("update_timestamp = #{updateTimestamp,jdbcType=VARCHAR}");
        }
        
        WHERE("id = #{id,jdbcType=BIGINT}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ti_lucky
     *
     * @mbggenerated Sat May 12 18:36:05 CST 2018
     */
    protected void applyWhere(TiLuckyExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}