@Service
@Transactional(rollbackFor = Exception.class)
public class <Object>ServiceImpl extends BaseServiceImpl<<Object>> implements <Object>Service {

    @Autowired
    private <Object>Mapper mapper;

    public <Object>Mapper getMapper() {
        return mapper;
    }

    public void setMapper(<Object>Mapper mapper) {
        this.mapper = mapper;
    }

    @Override
    public int add(<Object> obj) {
        obj.setCreateTimestamp(DateUtil.getCurrentTimestamp());
        obj.setUpdateTimestamp(DateUtil.getCurrentTimestamp());
        return mapper.insert(obj);
    }

    @Override
    public int removeById(Long id) {

        return mapper.deleteByPrimaryKey(id);
    }

    @Override
    public int update(<Object> obj) {
        obj.setUpdateTimestamp(DateUtil.getCurrentTimestamp());
        return mapper.updateByPrimaryKey(obj);
    }

    @Override
    public <Object> getById(Long id) {
        <Object> article = mapper.selectByPrimaryKey(id);
        return article;
    }

    @Override
    public List<<Object>> getAll() {
        <Object>Example example = new <Object>Example();
        example.setOrderByClause("update_timestamp desc");
        return mapper.selectByExample(example);
    }

    @Override
    public PageInfo<<Object>> findList(<Object> searchCondition, PageInfo<<Object>> pager) {
        <Object>Example example = new <Object>Example();
        <UploadCodeHere>
        PageHelper.startPage(pager.getPageNum(), pager.getPageSize());
        example.setOrderByClause("update_timestamp desc");
        List<<Object>> list = mapper.selectByExample(example);
        return new PageInfo<<Object>>(list);
    }

}
